//
//  CSHSignupViewController.m
//  ChargingStationHelper
//
//  Created by WangShaopeng on 7/4/16.
//  Copyright © 2016 com.iycharge. All rights reserved.
//

#import "CSHSignupViewController.h"
#import "UIView+CornerRadius.h"
#import "UIButton+CSHLogin.h"
#import "AFNetworking.h"

#import "MBProgressHUD+MJ.h"

#import "CSHServiceAgreementVC.h"

@interface CSHSignupViewController ()

@property (weak, nonatomic) IBOutlet UIView *inputContainerView;

//手机号
@property (weak, nonatomic) IBOutlet UITextField *phoneTextField;
//密码
@property (weak, nonatomic) IBOutlet UITextField *passwordTextField;
//输入验证码
@property (weak, nonatomic) IBOutlet UITextField *captchaTextField;
//点击获验证码 button
@property (weak, nonatomic) IBOutlet UIButton *captchaButton;
//注册 button
@property (weak, nonatomic) IBOutlet UIButton *signupButton;
//点击 获取验证码之后的 button变为倒计时的label
@property (weak, nonatomic) IBOutlet UILabel *countingLabel;

@property (strong, nonatomic) NSTimer *timer;
@property (assign, nonatomic) NSTimeInterval timerScheduledTime;

@end

@implementation CSHSignupViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.phoneTextField.keyboardType=UIKeyboardTypeNumberPad;
    self.captchaTextField.keyboardType=UIKeyboardTypeNumberPad;
    
    self.signupButton.backgroundColor=[UIColor colorWithRed:0 green:0.71 blue:0.69 alpha:1];
    
    [self.inputContainerView csh_setDefaultCornerRadius];
    [self.captchaButton csh_setDefaultCornerRadius];
    [self.captchaButton csh_enableWithLoginAppearance];
    [self.signupButton csh_setDefaultCornerRadius];
//    [self.signupButton csh_disableWithLoginAppearance];
    [self.countingLabel csh_setDefaultCornerRadius];
}

- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
    
    [self.timer invalidate];
    self.timer = nil;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}
//判断是否是有效的手机号
- (BOOL)isValidPhoneNumber:(NSString *)phoneNumber {
    NSPredicate *phoneTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", @"^1\\d{10}$"];
    return [phoneTest evaluateWithObject:phoneNumber];
}
#pragma mark - response behavior
//点击获取验证码按钮
- (IBAction)handleCaptchaButton:(UIButton *)sender {
    [self timeOut];
    
    [self getCode];
}
#pragma mark - 短信验证,手机获取验证码
-(void)getCode{
    //短信验证
    //type=1 注册 没注册成功可以一直发
    //type=2 找回密码 的发送短信的接口  注册成功之后可以一直发
    
    if ([self.phoneTextField.text isEqualToString:@""]) {
        [MBProgressHUD showError:@"手机号不能为空！"];
        return;
    }
    if ([self isValidPhoneNumber:self.phoneTextField.text]==NO) {
        [MBProgressHUD showError:@"手机号格式错误！"];
        return;
    }
    
    NSString *urlStr=@"http://120.52.12.203:8100/oauth/send-otp-code";
    NSDictionary *para=@{@"type":@"2",@"phone":self.phoneTextField.text};
    
    AFHTTPRequestOperationManager *_operation = [AFHTTPRequestOperationManager  manager];
    
    _operation.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    _operation.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/xml",@"text/plain",@"application/json",nil];
    //设置请求头
    [_operation.requestSerializer setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"];
    
    [_operation POST:urlStr parameters:para success:^(AFHTTPRequestOperation *operation, id responseObject) {
        
        NSDictionary *response=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableContainers error:nil];
        NSLog(@"response:%@",response);
        
        NSString *httpErrorCode=[NSString stringWithFormat:@"%@",response[@"httpErrorCode"]];
        if ([httpErrorCode isEqualToString:@"200"]) {
            [MBProgressHUD showSuccess:@"短信发送成功！"];
        }else{
            [MBProgressHUD showError:@"短信发送失败！"];
        }
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        NSLog(@"error:%@",error);
        [MBProgressHUD showError:@"网络请求错误！"];
    }];
}
#pragma mark - 点击注册 button
//
- (IBAction)handleSignupButton:(UIButton *)sender {
    
    
    /*
     // 注册
     */
    
    if ([self.phoneTextField.text isEqualToString:@""]) {
        [MBProgressHUD showError:@"手机号不能为空！"];
        return;
    }
    if ([self isValidPhoneNumber:self.phoneTextField.text]==NO) {
        [MBProgressHUD showError:@"手机号格式错误！"];
        return;
    }
    if ([self.passwordTextField.text isEqualToString:@""]) {
        [MBProgressHUD showError:@"密码不能为空！"];
        return;
    }
    if ([self.captchaTextField.text isEqualToString:@""]) {
        [MBProgressHUD showError:@"验证码不能为空！"];
        return;
    }
    
    NSString *urlStr=@"http://120.52.12.203:8100/api/user/register";
    NSDictionary *para=@{@"phone":self.phoneTextField.text,@"password":self.passwordTextField.text,@"code":self.captchaTextField.text,@"type":@"1"};
    NSLog(@"para:%@",para);
    AFHTTPRequestOperationManager *_operation = [AFHTTPRequestOperationManager  manager];
    
    //设置请求格式
    //    _operation.requestSerializer = [AFJSONRequestSerializer serializer];
    //    //设置返回格式
    _operation.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    _operation.responseSerializer=[AFJSONResponseSerializer serializer];
    
    _operation.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html",@"text/xml",@"text/plain",@"application/json",nil];
    
    //设置请求头
    //    [_operation.requestSerializer setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"];
    
    //    [_operation.requestSerializer setValue:@"Basic eW91ZXRvbmctYW5kcm9pZDpzZWNyZXQ=" forHTTPHeaderField:@"Authorization"];
    
    
    //发送请求
    [_operation POST:urlStr parameters:para success:^(AFHTTPRequestOperation *operation, id responseObject) {
        
        NSDictionary *response=[NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableContainers error:nil];
        NSLog(@"response:%@",response);
        
        NSString *httpErrorCode=[NSString stringWithFormat:@"%@",response[@"httpErrorCode"]];
        
        if ([httpErrorCode isEqualToString:@"200"]) {
            [MBProgressHUD showSuccess:@"注册成功"];
        }else{
            [MBProgressHUD showError:@"注册失败"];
        }
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        NSLog(@"error:%@",error);
        [MBProgressHUD showError:@"网络错误！"];
        
    }];
}
//同意 优e通服务协议
- (IBAction)handleServiceItemsButton:(UIButton *)sender {
    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"Menu" bundle:nil];
    CSHServiceAgreementVC *paymentViewController = [storyboard instantiateViewControllerWithIdentifier:NSStringFromClass([ CSHServiceAgreementVC class])];
    [self.navigationController pushViewController:paymentViewController animated:YES];
}

//倒计时1
-(void)timeOut{
    [self.captchaButton csh_disableWithLoginAppearance];
    
    self.timer = [NSTimer timerWithTimeInterval:1.0 target:self selector:@selector(handleTimer:) userInfo:nil repeats:YES];
    
    [[NSRunLoop mainRunLoop] addTimer:self.timer forMode:NSRunLoopCommonModes];
    
    self.timerScheduledTime = [[NSDate new] timeIntervalSince1970];
    [self.timer fire];
    self.countingLabel.hidden = NO;
}
//倒计时2
- (void)handleTimer:(NSTimer *)timer {
    if (timer.valid) {
        NSTimeInterval fireDateInterval = [[NSDate new] timeIntervalSince1970] - self.timerScheduledTime;
        NSInteger remainingInterval = round(59 - fireDateInterval);
        if (remainingInterval > 0) {
            self.countingLabel.text = [NSString stringWithFormat:@"%@", @(remainingInterval)];
        } else {
            [self.timer invalidate];
            self.timer = nil;
            [self.captchaButton csh_enableWithLoginAppearance];
            self.countingLabel.hidden = YES;
        }
    } else {
        [self.captchaButton csh_enableWithLoginAppearance];
    }
    
    // send message
}

@end
